/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bab3dan4;

import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author user
 */
public class FormKry extends javax.swing.JFrame {

    /**
     * Creates new form FormKry
     */
    private static final long serialVersionUID = 1L;
        private DefaultTableModel tableModel;
        private Connection koneksi  = null;
        private koneksiDB db = new koneksiDB();
        private boolean status = false;
        private int baris;
        private Object tblkry;
        
        public FormKry() {
        initComponents();
        tampilKry();
        baru();
         setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setText("NIP");

        jLabel3.setText("Nama");

        jLabel4.setText("Jenis Kelamin");

        jLabel5.setText("Jabatan");

        rdLaki.setText("Laki-Laki");
        rdLaki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdLakiActionPerformed(evt);
            }
        });

        rdPerem.setText("Perempuan");
        rdPerem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdPeremActionPerformed(evt);
            }
        });

        CbJabatan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-List Jabatan-", "Dosen", "Karyawan", "Manager" }));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNip = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        rdLaki = new javax.swing.JRadioButton();
        rdPerem = new javax.swing.JRadioButton();
        CbJabatan = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnTutup = new javax.swing.JButton();
        btnLaporan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKry = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel2.setText("NIP");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel3.setText("Nama");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel4.setText("Jenis Kelamin");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel5.setText("Jabatan");

        txtNip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNipActionPerformed(evt);
            }
        });

        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });

        rdLaki.setText("Laki-Laki");
        rdLaki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdLakiActionPerformed(evt);
            }
        });

        rdPerem.setText("Perempuan");
        rdPerem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdPeremActionPerformed(evt);
            }
        });

        CbJabatan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "List Jabatan", "Dosen", "Karyawan", "Manager" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CbJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rdLaki)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdPerem))
                    .addComponent(txtNip, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rdLaki)
                    .addComponent(rdPerem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(CbJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setText("Input Data Karyawan");

        btnSimpan.setBackground(new java.awt.Color(255, 102, 102));
        btnSimpan.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setBackground(new java.awt.Color(255, 102, 102));
        btnUbah.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 102, 102));
        btnHapus.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnTutup.setBackground(new java.awt.Color(255, 102, 102));
        btnTutup.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnTutup.setText("Tutup");
        btnTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTutupActionPerformed(evt);
            }
        });

        btnLaporan.setBackground(new java.awt.Color(255, 102, 102));
        btnLaporan.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        btnLaporan.setText("Laporan");
        btnLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaporanActionPerformed(evt);
            }
        });

        tblKry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblKry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKry);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUbah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTutup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLaporan))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus)
                    .addComponent(btnTutup)
                    .addComponent(btnLaporan))
                .addGap(56, 56, 56)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        if(status==false) {
            simpanKry();
        } else {
            ubahKry();
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        status = true;
        txtNama.grabFocus();
        aturText(false,true,true,true);
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        hapusKry();
        aturText(true,true,true,true);
        baru();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTutupActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnTutupActionPerformed

    private void tblKryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKryMouseClicked
        // TODO add your handling code here:
        tampilText();
        aturText(false,false,false,false);
    }//GEN-LAST:event_tblKryMouseClicked

    private void rdPeremActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdPeremActionPerformed
        // TODO add your handling code here:
        rdLaki.setSelected(false);
    }//GEN-LAST:event_rdPeremActionPerformed

    private void rdLakiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdLakiActionPerformed
        // TODO add your handling code here:
        rdPerem.setSelected(false);
    }//GEN-LAST:event_rdLakiActionPerformed

    private void txtNipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNipActionPerformed

    private void btnLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaporanActionPerformed
        // TODO add your handling code here:
        try {
            JasperPrint jp = JasperFillManager.fillReport(getClass().getResourceAsStream("reportKry.jasper"), null, KaryawanDB.getKoneksi());
            JasperViewer.viewReport(jp, false);
        } catch ( Exception ex ){
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnLaporanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormKry().setVisible(true);
            }
        });
    }

    public void simpanKry() {
        if (CbJabatan.getSelectedIndex() != 0) {
            try {
                String jk = (rdLaki.isSelected()? "Laki-Laki":"Perempuan");
                String query = "INSERT INTO tblkry VALUES('" 
                        + txtNip.getText() + "','"
                        + txtNama.getText() + "','" + jk + "','"
                        + CbJabatan.getSelectedItem() + "')";
                
                db.koneksiDatabase();
                Statement st = db.getKoneksi().createStatement();
                st.executeUpdate(query);
                st.close();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
            tampilKry();
            baru();
        } else {
            JOptionPane.showMessageDialog(this, "Field Jabatan belum dipilih !");
            CbJabatan.grabFocus();
        }
    }
    
    public String[][] tampilDataKry(String query) {
        int i, jmlBaris;
        String[][] temp = null;
        
        try {
            Statement st = db.getKoneksi().createStatement();
            ResultSet rsKry = st.executeQuery(query);
            rsKry.last();
            jmlBaris = rsKry.getRow();
            rsKry.beforeFirst();
            temp = new String[jmlBaris][4];
            i = 0;
            
            while (rsKry.next()) {
                temp[i][0] = rsKry.getString("nip");
                temp[i][1] = rsKry.getString("nama");
                temp[i][2] = rsKry.getString("jenis_kelamin");
                temp[i][3] = rsKry.getString("jabatan");
                i++;
            }
            st.close();
        } catch (SQLException se) {
            System.out.println("Gagal Tampil Data " + se.getMessage().toString());
            System.exit(0);
        }
        return temp;
    }
    
    
    private void tampilKry() {
        String[][] tbData;
        String[] tbHeader = {"NIP", "Nama", "Jenis Kelamin", "Jabatan"};
        String sql = "SELECT * FROM tblkry";
        db.koneksiDatabase();
        try {
            tbData = tampilDataKry(sql);
            tableModel = new DefaultTableModel(tbData, tbHeader);
            tblKry.setModel(tableModel);
            
            int brs = tblKry.getRowCount();
            if (brs > 0) tblKry.addRowSelectionInterval(0, 0);
        } catch (Exception ex) {
            System.out.println("Statement Gagal Dibuat");
            System.out.println(ex.toString());
        }
        tampilText();
    }
    
    private void tampilText() {
    baris = tblKry.getSelectedRow();
    if (baris >= 0 ) {
        txtNip.setText(tableModel.getValueAt(baris, 0).toString());
        txtNama.setText(tableModel.getValueAt(baris,1).toString());
        if("Laki-Laki".equals(tableModel.getValueAt(baris, 2).toString())){
            rdLaki.setSelected(true);
            rdPerem.setSelected(false);
        } else {
            rdLaki.setSelected(false);
            rdPerem.setSelected(true);
        }
        if ("Dosen".equals(tableModel.getValueAt(baris, 3))) {
            CbJabatan.setSelectedIndex(1);
        } else if ("Karyawan".equals(tableModel.getValueAt(baris, 3))) {
            CbJabatan.setSelectedIndex(2);
        } else if ("Manager".equals(tableModel.getValueAt(baris, 3))) {
            CbJabatan.setSelectedIndex(3);
        }
    }
    }
    
 public void ubahKry() {
        String nip = txtNip.getText();
        String nama = txtNama.getText();
        String jk = (rdLaki.isSelected()? "Laki-Laki":"Perempuan");
        String jabatan = (String) CbJabatan.getSelectedItem();
        
        try {
            String sql = "UPDATE tblkry SET nama = '" + nama + 
                    "', jenis_kelamin = '" + jk + 
                    "', jabatan = '" + jabatan +
                    "' WHERE nip = '" + nip + "'";
            
            PreparedStatement stat = db.getKoneksi().prepareStatement(sql);
            
            try {
                stat.executeUpdate(sql);
                baru();
            } catch (SQLException se) {
                JOptionPane.showMessageDialog(null, 
                        "Gagal Update Data : " + se.getMessage(), "Informasi",
                        JOptionPane.ERROR_MESSAGE);
            }
            
            stat.close();
        } catch (Exception e) {
            
        }
        
        hapusTblKry();
        tampilKry();
        baru();
    }
    
    public void hapusTblKry() {
        
    }
 
    public void hapusKry() {
        String nip = txtNip.getText();
        
        if (JOptionPane.showConfirmDialog(null, 
                "Apakah Yakin Data Dihapus '" + nip + "'", "Konfirmasi",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 
                JOptionPane.YES_OPTION) {
            
            try {
                String sql = "DELETE FROM tblkry WHERE nip = '" + nip + "'";
                PreparedStatement stat = db.getKoneksi().prepareStatement(sql);
                
                try {
                    stat.executeUpdate(sql);
                    baru();
                } catch (SQLException se) {
                    JOptionPane.showMessageDialog(null, 
                            "Proses Hapus Gagal : " + se.getMessage(),
                            "Informasi", JOptionPane.ERROR_MESSAGE);
                    txtNip.requestFocus();
                }
                stat.close();
            } catch (Exception e) {
                
            }
        }
        hapusTblKry();
        tampilKry();
    }
   

public void baru() {
    txtNip.requestFocus();
    txtNip.setText("");
    txtNama.setText("");
    rdLaki.setSelected(false);
    rdPerem.setSelected(false);
    CbJabatan.setSelectedIndex(0);
    
    status = false;
    aturText(true,true,true,true);
}

private void aturText(boolean nip, boolean nama, boolean jk, boolean jabatan) {
    txtNip.setEnabled(nip);
    txtNama.setEnabled(nama);
    rdLaki.setEnabled(jk);
    rdPerem.setEnabled(jk);
    CbJabatan.setEnabled(jabatan);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CbJabatan;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnLaporan;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTutup;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdLaki;
    private javax.swing.JRadioButton rdPerem;
    private javax.swing.JTable tblKry;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNip;
    // End of variables declaration//GEN-END:variables

    private static class tblKry {

        private static void setModel(DefaultTableModel tableModel) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private static int getRowCount() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private static void addRowSelectionInterval(int i, int i0) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public tblKry() {
        }
    }
}
